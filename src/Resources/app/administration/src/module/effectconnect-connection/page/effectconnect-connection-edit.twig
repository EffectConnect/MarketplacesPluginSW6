{% block connection_edit %}
    <sw-page class="connection-edit">
        <template #smart-bar-actions>
            <sw-button @click="save()" :disabled="busySaving || !loaded" variant="primary" >
                {{ $tc('ec.global.save') }}
            </sw-button>
        </template>
        <template #smart-bar-back>
            <router-link class="smart-bar__back-btn" :to="{ name: 'effectconnect.connection.overview' }">
                <sw-icon name="regular-chevron-left-s" small />
            </router-link>
        </template>
        <template #content>
            <sw-loader v-if="busySaving"></sw-loader>
            <div v-if="loaded">
                <br><br>
                <sw-card :title="tc('general')">
                    <sw-inherit-wrapper :helpText="tc('salesChannelHelpText')" :label="tc('salesChannelLabel')">
                        <template v-slot:content>
                            <sw-single-select
                                    :placeholder="tc('salesChannelPlaceholder')"
                                    :disabled="!newItem"
                                    :options="availableSalesChannels"
                                    :value="connection.salesChannelId" @update:value="connection.salesChannelId = $event"
                            >
                            </sw-single-select>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-inherit-wrapper :helpText="tc('nameHelpText')" :label="tc('nameLabel')">
                        <template v-slot:content>
                            <sw-text-field :value="connection.name" @update:value="connection.name = $event" :placeholder="tc('namePlaceholder')"></sw-text-field>
                        </template> {# }v-model="connection.name"#}
                    </sw-inherit-wrapper>
                </sw-card>
                <sw-card :title="tc('api')">
                    <sw-inherit-wrapper :helpText="tc('publicKeyHelpText')" :label="tc('publicKeyLabel')">
                        <template v-slot:content>
                            <sw-text-field type="input" :placeholder="tc('publicKeyPlaceholder')" :value="connection.publicKey" @update:value="connection.publicKey = $event"></sw-text-field>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-inherit-wrapper :helpText="tc('secretKeyHelpText')" :label="tc('secretKeyLabel')">
                        <template v-slot:content>
                            <sw-text-field type="password" :placeholder="tc('secretKeyPlaceholder')" :value="connection.secretKey" @update:value="connection.secretKey = $event"></sw-text-field>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-button :disabled="!connection.secretKey || !connection.publicKey" @click="testApiCredentials()" size="small">
                        <sw-icon name="regular-check-circle" small />
                        {{ tc('testCredentials') }}
                    </sw-button>
                </sw-card>
                <sw-card :title="tc('catalogExport')">
                    <sw-label>
                        <div v-html="$tc('ec.connection.edit.scheduleInformationText', 0, {current: tc('schedules.' + connection.catalogExportSchedule)})"></div>
                    </sw-label>
                    <br>
                    <sw-switch-field bordered
                                     :value="connection.addLeadingZeroToEan" @update:value="connection.addLeadingZeroToEan = $event"
                                     :label="tc('addLeadingZeroToEanLabel')"
                                     :helpText="tc('addLeadingZeroToEanHelpText')">
                    </sw-switch-field>
                    <sw-switch-field bordered
                                     :value="connection.useSpecialPrice" @update:value="connection.useSpecialPrice = $event"
                                     :label="tc('useSpecialPriceLabel')"
                                     :helpText="tc('useSpecialPriceHelpText')">
                    </sw-switch-field>
                    <sw-switch-field bordered
                                     :value="connection.useFallbackTranslations" @update:value="connection.useFallbackTranslations = $event"
                                     :label="tc('useFallbackTranslationsLabel')"
                                     :helpText="tc('useFallbackTranslationsHelpText')">
                    </sw-switch-field>
                    <sw-switch-field bordered
                                     :value="connection.useSalesChannelDefaultLanguageAsFirstFallbackLanguage" @update:value="connection.useSalesChannelDefaultLanguageAsFirstFallbackLanguage = $event"
                                     :label="tc('useSalesChannelDefaultLanguageAsFirstFallbackLanguageLabel')"
                                     :helpText="tc('useSalesChannelDefaultLanguageAsFirstFallbackLanguageHelpText')">
                    </sw-switch-field>
                    <sw-switch-field bordered
                                     :value="connection.useSystemLanguages" @update:value="connection.useSystemLanguages = $event"
                                     :label="tc('useSystemLanguagesLabel')"
                                     :helpText="tc('useSystemLanguagesHelpText')">
                    </sw-switch-field>
                    <sw-button :disabled="newItem" @click="triggerCatalogExport()" size="small">
                        <sw-icon name="regular-rocket" small />
                        {{ tc('triggerCatalogExport') }}
                    </sw-button>
                </sw-card>
                <sw-card :title="tc('offerExport')">
                    <sw-label>
                        <div v-html="$tc('ec.connection.edit.scheduleInformationText', 0, {current: tc('schedules.' + connection.offerExportSchedule)})"></div>
                    </sw-label>
                    <br>
                    <sw-inherit-wrapper :helpText="tc('stockTypeHelpText')" :label="tc('stockTypeLabel')">
                        <template v-slot:content>
                            <sw-single-select
                                    :placeholder="tc('stockTypePlaceholder')"
                                    :options="stockTypes"
                                    :value="connection.stockType" @update:value="connection.stockType = $event">
                            </sw-single-select>
                        </template>
                    </sw-inherit-wrapper>
                </sw-card>
                <sw-card :title="tc('orderImport')">
                    <sw-label>
                        <div v-html="$tc('ec.connection.edit.scheduleInformationText', 0, {current: tc('schedules.' + connection.orderImportSchedule)})"></div>
                    </sw-label>
                    <br>
                    <sw-inherit-wrapper :helpText="tc('orderStatusHelpText')" :label="tc('orderStatusLabel')">
                        <template v-slot:content>
                            <sw-single-select
                                    :placeholder="tc('orderStatusPlaceholder')"
                                    :options="orderStatuses"
                                    :value="connection.orderStatus" @update:value="connection.orderStatus = $event">
                            </sw-single-select>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-inherit-wrapper :helpText="tc('paymentStatusHelpText')" :label="tc('paymentStatusLabel')">
                        <template v-slot:content>
                            <sw-single-select
                                    :placeholder="tc('paymentStatusPlaceholder')"
                                    :options="paymentStatuses"
                                    :value="connection.paymentStatus" @update:value="connection.paymentStatus = $event">
                            </sw-single-select>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-inherit-wrapper :helpText="tc('paymentMethodHelpText')" :label="tc('paymentMethodLabel')">
                        <template v-slot:content>
                            <sw-entity-single-select
                                    :placeHolder="tc('paymentMethodPlaceholder')"
                                    labelProperty="name"
                                    valueProperty="id"
                                    entity="payment_method"
                                    v-model="connection.paymentMethod">
                            </sw-entity-single-select>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-inherit-wrapper :helpText="tc('shippingMethodHelpText')" :label="tc('shippingMethodLabel')">
                        <template v-slot:content>
                            <sw-entity-single-select
                                    :placeHolder="tc('shippingMethodPlaceholder')"
                                    labelProperty="name"
                                    valueProperty="id"
                                    entity="shipping_method"
                                    v-model="connection.shippingMethod">
                            </sw-entity-single-select>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-switch-field bordered v-model="connection.createCustomer"
                                     :label="tc('createCustomerLabel')"
                                     :helpText="tc('createCustomerHelpText')">
                    </sw-switch-field>
                    <sw-inherit-wrapper :helpText="tc('customerGroupHelpText')" :label="tc('customerGroupLabel')" v-show="connection.createCustomer">
                        <template v-slot:content>
                            <sw-entity-single-select
                                    :placeHolder="tc('customerGroupPlaceholder')"
                                    labelProperty="name"
                                    valueProperty="id"
                                    entity="customer_group"
                                    v-model="connection.customerGroup">
                            </sw-entity-single-select>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-inherit-wrapper :helpText="tc('customerSourceTypeHelpText')" :label="tc('customerSourceTypeLabel')" v-show="connection.createCustomer">
                        <template v-slot:content>
                            <sw-single-select
                                    :placeholder="tc('customerSourceTypePlaceholder')"
                                    :options="customerSourceTypes"
                                    v-model="connection.customerSourceType">
                            </sw-single-select>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-switch-field bordered v-model="connection.importExternallyFulfilledOrders"
                                     :label="tc('importExternallyFulfilledOrdersLabel')"
                                     :helpText="tc('importExternallyFulfilledOrdersHelpText')">
                    </sw-switch-field>
                    <sw-inherit-wrapper :helpText="tc('externalPaymentStatusHelpText')" :label="tc('externalPaymentStatusLabel')" v-show="connection.importExternallyFulfilledOrders">
                        <template v-slot:content>
                            <sw-single-select
                                    :placeholder="tc('externalPaymentStatusPlaceholder')"
                                    :options="paymentStatuses"
                                    v-model="connection.externalPaymentStatus">
                            </sw-single-select>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-inherit-wrapper :helpText="tc('externalOrderStatusHelpText')" :label="tc('externalOrderStatusLabel')" v-show="connection.importExternallyFulfilledOrders">
                        <template v-slot:content>
                            <sw-single-select
                                    :placeholder="tc('externalOrderStatusPlaceholder')"
                                    :options="orderStatuses"
                                    :value="connection.externalOrderStatus" @update:value="connection.externalOrderStatus = $event">
                            </sw-single-select>
                        </template>
                    </sw-inherit-wrapper>
                    <sw-inherit-wrapper :helpText="tc('externalShippingStatusHelpText')" :label="tc('externalShippingStatusLabel')" v-show="connection.importExternallyFulfilledOrders">
                        <template v-slot:content>
                            <sw-single-select
                                    :placeholder="tc('externalShippingStatusPlaceholder')"
                                    :options="shippingStatuses"
                                    :value="connection.externalShippingStatus" @update:value="connection.externalShippingStatus = $event">
                            </sw-single-select>
                        </template>
                    </sw-inherit-wrapper>
                </sw-card>
            </div>
            <sw-modal v-if="modal != null" @modal-close="modal.onCancel()">
                <p>{{ modal.text }}</p>
                <template v-slot:modal-footer>
                    <sw-button size="small" @click="modal.onCancel()">
                        {{ $tc('ec.global.cancel') }}
                    </sw-button>
                    <sw-button size="small" variant="danger" @click="modal.onConfirm()">
                        {{ $tc('ec.global.confirm') }}
                    </sw-button>
                </template>
            </sw-modal>
        </template>
    </sw-page>
{% endblock %}